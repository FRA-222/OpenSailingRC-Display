#!/bin/bash
# Script de correction pour l'erreur "invalid header: 0x2068746f"
# OpenSailingRC Display V1.0.1 - Fix M5Burner Bootloader Issue

echo "üîß CORRECTIF ERREUR BOOTLOADER M5BURNER"
echo "========================================"
echo ""
echo "Ce script corrige l'erreur 'invalid header: 0x2068746f'"
echo "qui survient quand M5Burner ne flash que le firmware principal"
echo "sans le bootloader et les partitions."
echo ""

# Variables
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
FIRMWARE_DIR="$SCRIPT_DIR/v1.0.1"
BOOTLOADER="$FIRMWARE_DIR/bootloader.bin"
PARTITIONS="$FIRMWARE_DIR/partitions.bin"
FIRMWARE="$FIRMWARE_DIR/OpenSailingRC_Display_v1.0.1.bin"

# V√©rification des pr√©requis
echo "üîç V√©rification des pr√©requis..."

# V√©rifier esptool
if ! command -v python3 &> /dev/null || ! python3 -c "import esptool" &> /dev/null; then
    echo "‚ùå ESPTool non trouv√©. Installation en cours..."
    pip3 install esptool
    if [ $? -ne 0 ]; then
        echo "‚ùå √âchec installation ESPTool. Installez manuellement:"
        echo "   pip3 install esptool"
        exit 1
    fi
    echo "‚úÖ ESPTool install√© avec succ√®s"
else
    echo "‚úÖ ESPTool disponible"
fi

# V√©rifier les fichiers firmware
echo ""
echo "üìÅ V√©rification des fichiers firmware..."
if [ ! -f "$BOOTLOADER" ]; then
    echo "‚ùå Bootloader non trouv√©: $BOOTLOADER"
    exit 1
fi
if [ ! -f "$PARTITIONS" ]; then
    echo "‚ùå Partitions non trouv√©es: $PARTITIONS"
    exit 1
fi
if [ ! -f "$FIRMWARE" ]; then
    echo "‚ùå Firmware non trouv√©: $FIRMWARE"
    exit 1
fi
echo "‚úÖ Tous les fichiers firmware sont pr√©sents"

# D√©tection automatique du port
echo ""
echo "üîå D√©tection du port s√©rie..."
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    PORT=$(ls /dev/cu.usbserial-* 2>/dev/null | head -n 1)
    if [ -z "$PORT" ]; then
        PORT=$(ls /dev/cu.SLAB_USBtoUART 2>/dev/null | head -n 1)
    fi
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux
    PORT=$(ls /dev/ttyUSB* /dev/ttyACM* 2>/dev/null | head -n 1)
else
    # Windows (via Git Bash ou WSL)
    echo "‚ö†Ô∏è  D√©tection automatique non support√©e sur Windows"
    echo "   Sp√©cifiez le port manuellement (ex: COM3)"
    read -p "Port s√©rie (ex: COM3): " PORT
fi

if [ -z "$PORT" ]; then
    echo "‚ùå Aucun port s√©rie d√©tect√©. Connectez votre M5Stack Core2."
    echo ""
    echo "Ports possibles:"
    echo "  macOS   : /dev/cu.usbserial-XXXXXXXX"
    echo "  Linux   : /dev/ttyUSB0 ou /dev/ttyACM0"
    echo "  Windows : COM3, COM4, etc."
    echo ""
    read -p "Sp√©cifiez le port manuellement: " PORT
    if [ -z "$PORT" ]; then
        echo "‚ùå Port non sp√©cifi√©. Arr√™t."
        exit 1
    fi
fi
echo "‚úÖ Port s√©rie d√©tect√©: $PORT"

# Confirmation utilisateur
echo ""
echo "‚ö†Ô∏è  ATTENTION: Cette op√©ration va EFFACER compl√®tement la flash de votre M5Stack Core2"
echo "   et installer le firmware OpenSailingRC Display V1.0.1 avec bootloader."
echo ""
echo "üìä Fichiers √† flasher:"
echo "   ‚Ä¢ 0x1000  : bootloader.bin ($(du -h "$BOOTLOADER" | cut -f1))"
echo "   ‚Ä¢ 0x8000  : partitions.bin ($(du -h "$PARTITIONS" | cut -f1))"
echo "   ‚Ä¢ 0x10000 : OpenSailingRC_Display_v1.0.1.bin ($(du -h "$FIRMWARE" | cut -f1))"
echo ""
read -p "Continuer? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Op√©ration annul√©e par l'utilisateur"
    exit 0
fi

# √âtape 1: Effacement complet
echo ""
echo "üßπ √âTAPE 1: Effacement complet de la flash..."
echo "============================================="
python3 -m esptool --chip esp32 --port "$PORT" --baud 115200 erase_flash
if [ $? -ne 0 ]; then
    echo "‚ùå √âchec de l'effacement. V√©rifiez la connexion."
    exit 1
fi
echo "‚úÖ Flash effac√©e avec succ√®s"

# Attente stabilisation
echo ""
echo "‚è≥ Attente stabilisation (3 secondes)..."
sleep 3

# √âtape 2: Flash syst√®me complet
echo ""
echo "üî• √âTAPE 2: Flash syst√®me complet..."
echo "===================================="
python3 -m esptool --chip esp32 --port "$PORT" --baud 115200 \
    --before default_reset --after hard_reset write_flash -z \
    --flash_mode dio --flash_freq 80m --flash_size 16MB \
    0x1000 "$BOOTLOADER" \
    0x8000 "$PARTITIONS" \
    0x10000 "$FIRMWARE"

if [ $? -ne 0 ]; then
    echo "‚ùå √âchec du flash. R√©essayez avec une vitesse plus lente:"
    echo "   Remplacez --baud 115200 par --baud 57600"
    exit 1
fi

# Succ√®s
echo ""
echo "üéâ SUCC√àS! Firmware install√© avec succ√®s"
echo "========================================"
echo ""
echo "‚úÖ Bootloader flash√© √† 0x1000"
echo "‚úÖ Partitions flash√©es √† 0x8000" 
echo "‚úÖ Firmware flash√© √† 0x10000"
echo ""
echo "üöÄ Votre M5Stack Core2 devrait maintenant d√©marrer avec:"
echo "   1. Splash screen 'WIND/BOAT' (2 secondes)"
echo "   2. Interface principale OpenSailingRC"
echo ""
echo "üìù Si vous voyez encore 'invalid header', reconnectez le M5Stack"
echo "   et v√©rifiez le port s√©rie √† 115200 baud."
echo ""
echo "üîó Support: https://github.com/FRA-222/OpenSailingRC-Display/issues"